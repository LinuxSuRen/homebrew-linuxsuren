# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ks < Formula
  desc "ks is a tool which makes it be easy to work with KubeSphere."
  homepage "https://github.com/linuxsuren/ks"
  version "0.0.41"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kubesphere-sigs/ks/releases/download/v0.0.41/ks-darwin-amd64.tar.gz"
      sha256 "bf848ab3ffe649f42808ab3512b74177048467faa1a249af5e0a733ef1649724"
    end
    if Hardware::CPU.arm?
      url "https://github.com/kubesphere-sigs/ks/releases/download/v0.0.41/ks-darwin-arm64.tar.gz"
      sha256 "caaa5e21dd786d8367d88affc3da78dddea4f2ac0f17eed67539207f2765249b"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kubesphere-sigs/ks/releases/download/v0.0.41/ks-linux-amd64.tar.gz"
      sha256 "9ed6e80b336a36d5993029984baeba202f556dd47ffc0db365ab6b6716ef7d5b"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kubesphere-sigs/ks/releases/download/v0.0.41/ks-linux-arm64.tar.gz"
      sha256 "54009228fd316314aa38bd5965a00037733217e230d12bf22f4f309794166e77"
    end
  end

  depends_on "vim" => :optional
  depends_on "bash-completion" => :optional
  depends_on "kubectl" => :optional

  def install
    bin.install name

    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/ks version")
    assert_match version.to_s, version_output
  end
end
